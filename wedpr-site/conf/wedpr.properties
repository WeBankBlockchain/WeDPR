wedpr.zone=${WEDPR_ZONE}
wedpr.agency=${WEDPR_AGENCY}
#### the uuid related configuration
# the worker id bit len
wedpr.uuid.generator.worker.id.bit.len=6
# the seq bit length
wedpr.uuid.generator.seq.bit.length=10
# the worker id, Note: must in range[0, 2^6)
wedpr.uuid.generator.worker.id=10

wedpr.crypto.symmetric.key=12345678
wedpr.crypto.symmetric.iv=123456

# the user related configuration
wedpr.user.jwt.secret=123456
# 1h ?unit is ms?
wedpr.user.jwt.expireTime=3600000
wedpr.user.jwt.delimiter=|
wedpr.user.jwt.cacheSize=10000
wedpr.user.jwt.privateKey=${USER_JWT_SK}
wedpr.user.jwt.sessionKey=${${USER_JWT_SESSION_KEY}

### the mybatis related configuration

#wedpr.mybatis.config.path=mybatis-config.xml
#wedpr.mybatis.url=jdbc:mysql://127.0.0.1/wedpr?characterEncoding=UTF-8&allowMultiQueries=true
wedpr.mybatis.url=${MYSQL_URL}
wedpr.mybatis.username=${MYSQL_USER}
wedpr.mybatis.password=${MYSQL_PASSWORD}
wedpr.mybatis.driverClassName=com.mysql.cj.jdbc.Driver

wedpr.mybatis.mapperLocations=classpath*:mapper/*Mapper.xml
# Note: the basePackage can't set to com.webank.wedpr simply for the mybatis will scan the Service
wedpr.mybatis.BasePackage=com.webank.wedpr.components.meta.resource.follower.dao,com.webank.wedpr.components.meta.sys.config.dao,com.webank.wedpr.components.project.dao,com.webank.wedpr.components.meta.setting.template.dao,com.webank.wedpr.components.sync.dao,com.webank.wedpr.components.authorization.dao,com.webank.wedpr.components.user.mapper,com.webank.wedpr.components.meta.agency.dao,com.webank.wedpr.components.api.credential.dao,com.webank.wedpr.components.integration.jupyter.dao,com.webank.wedpr.components.db.mapper.service.publish.dao,com.webank.wedpr.components.db.mapper.dataset.mapper,com.webank.wedpr.components.scheduler.mapper
# wedpr.mybatis.typeAliasesPackage=

### the blockchain configuration
#wedpr.chain.group_id=group0
wedpr.chain.group_id=${BLOCKCHAIN_GROUP_ID}
wedpr.chain.config_path=config.toml

### the election related configuration
wedpr.leader.election.keep.alive.seconds=30
wedpr.leader.election.expire.seconds=60

### the sync module related configuration
#wedpr.sync.recorder.factory.contract_address=0x4721d1a77e0e76851d460073e64ea06d9c104194
wedpr.sync.recorder.factory.contract_address=${WEDPR_RECORDER_CONTRACT_ADDRESS}
#wedpr.sync.sequencer.contract_address=0x6849f21d1e455e9f0712b1e99fa4fcd23758e8f1
wedpr.sync.sequencer.contract_address=${WEDPR_SEQUENCER_CONTRACT_ADDRESS}
wedpr.sync.recorder.contract_version=1
wedpr.sync.queue_limit=100000
wedpr.sync.worker_idle_ms=10

wedpr.thread.max.blocking.queue.size=1000

# the scheduler related config
wedpr.scheduler.job.concurrency=5
wedpr.scheduler.query.job.status.interval.ms=30000
wedpr.scheduler.interval.ms=30000

# the executor related config
wedpr.executor.job.cache.dir=./.cache/jobs
wedpr.executor.psi.tmp.file.name=psi_prepare.csv
wedpr.executor.psi.prepare.file.name=psi_prepare.csv
wedpr.executor.ml.connect.request.timeout.ms=10000
wedpr.executor.ml.connect.timeout.ms=5000
wedpr.executor.ml.request.timeout.ms=60000
wedpr.executor.ml.max.total.connection=5

wedpr.executor.psi.connect.request.timeout.ms=10000
wedpr.executor.psi.connect.timeout.ms=5000
wedpr.executor.psi.request.timeout.ms=60000
wedpr.executor.psi.max.total.connection=5

wedpr.executor.psi.token=${PSI_API_TOKEN}

# mpc
wedpr.executor.mpc.token=
wedpr.executor.mpc.is.malicious=false
wedpr.executor.mpc.connect.request.timeout.ms=10000
wedpr.executor.mpc.connect.timeout.ms=5000
wedpr.executor.mpc.request.timeout.ms=60000
wedpr.executor.mpc.max.total.connection=5

# the jupyter config
wedpr.jupyter.max_count_per_host=10
wedpr.jupyter.host_configuration_key=jupyter_entrypoints

# the transport config
wedpr.transport.threadpool_size=4
wedpr.transport.nodeID=${WEDPR_NODE_ID}
wedpr.transport.gateway_targets=${GATEWAY_TARGET}

wedpr.transport.host_ip=${WEDPR_TRANSPORT_HOST_IP}
wedpr.transport.listen_ip=0.0.0.0
wedpr.transport.listen_port=${WEDPR_TRANSPORT_LISTEN_PORT}

### the service configuration
wedpr.service.debugMode=false
# only used when debugMode is true
#wedpr.service.entrypoints=[{"serviceName": "pir", "entryPoints": ["127.0.0.1:8101"]}]
