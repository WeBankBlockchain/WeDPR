<?xml version="1.0" encoding="UTF-8" ?>
<!--
/*

 * Copyright 2017-2025  [webank-wedpr]
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 *
 */
-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.webank.wedpr.components.api.credential.dao.ApiCredentialMapper">
    <resultMap id="ApiCredentialDOMap" type="com.webank.wedpr.components.api.credential.dao.ApiCredentialDO">
        <id column="id" property="id"/>
        <result column="access_key_id" property="accessKeyID"/>
        <result column="access_key_secret" property="accessKeySecret"/>
        <result column="owner" property="owner"/>
        <result column="status" property="status"/>
        <result column="desc" property="desc"/>
        <result column="create_time" property="createTime"/>
        <result column="last_update_time" property="lastUpdateTime"/>
    </resultMap>
    <insert id="insertCredential" parameterType="com.webank.wedpr.components.api.credential.dao.ApiCredentialDO">
        insert into `wedpr_api_credential_table`(`id`, `access_key_id`,`access_key_secret`,
                    `owner`, `status`, `desc`, `create_time`) values
            (#{credential.id}, #{credential.accessKeyID}, #{credential.accessKeySecret}, #{credential.owner},
             #{credential.status}, #{credential.desc}, NOW())
    </insert>
    <update id="updateCredential" parameterType="com.webank.wedpr.components.api.credential.dao.ApiCredentialDO">
        update `wedpr_api_credential_table`
        <set>
            <if test="credential.status != null and credential.status !=''">
                `status` = #{credential.status},
            </if>
            <if test="credential.desc != null and credential.desc !=''">
                `desc` = #{credential.desc},
            </if>
        </set>
        where 1 = 1
        <if test="credential.id != null and credential.id !=''">
            and `id` = #{credential.id}
        </if>
        <if test="credential.accessKeyID != null and credential.accessKeyID !=''">
            and `access_key_id` = #{credential.accessKeyID}
        </if>
        <if test="credential.owner != null and credential.owner !=''">
            and `owner` = #{credential.owner}
        </if>
    </update>
    <delete id="deleteCredentialByCondition" parameterType="com.webank.wedpr.components.api.credential.dao.ApiCredentialDO">
        delete from `wedpr_api_credential_table` where 1 = 1
        <if test="condition.id != null and condition.id !=''">
            and `id` = #{condition.id}
        </if>
        <if test="condition.accessKeyID != null and condition.accessKeyID !=''">
            and `access_key_id` = #{condition.accessKeyID}
        </if>
        <if test="condition.owner != null and condition.owner !=''">
            and `owner` = #{condition.owner}
        </if>
        <if test="condition.status != null and condition.status !=''">
            and `status` = #{condition.status}
        </if>
    </delete>
    <select id="queryCredentials" resultMap="ApiCredentialDOMap">
        select *
        from wedpr_api_credential_table where 1=1
        <choose>
            <when test="condition != null and condition != ''">
                <if test="condition.id != null and condition.id !=''">
                    and `id` = #{condition.id}
                </if>
                <if test="condition.owner != null and condition.owner !=''">
                    and `owner` = #{condition.owner}
                </if>
                <if test="condition.accessKeyID != null and condition.accessKeyID !=''">
                    and `access_key_id` = #{condition.accessKeyID}
                </if>
                <if test="condition.status!= null and condition.status !=''">
                    and `status` = #{condition.status}
                </if>
                <if test="condition.startTime != null and condition.startTime  != ''">
                    <![CDATA[ and datediff(create_time, #{condition.startTime}) >= 0]]>
                </if>
                <if test="condition.endTime != null and condition.endTime  != ''">
                    <![CDATA[ and datediff(create_time, #{condition.endTime}) <= 0]]>
                </if>
            </when>
        </choose>
        order by `last_update_time` desc
    </select>
</mapper>